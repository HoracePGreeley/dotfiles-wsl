#!/usr/bin/env bash

# Hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin

# Install zsh and oh-my-zsh
sudo apt-get install zsh

echo 'Install oh-my-zsh'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
chsh -s `which zsh`

echo 'Installing zsh plugins'
echo '------------'
git clone https://github.com/jessarcher/zsh-artisan.git ~/.oh-my-zsh/custom/plugins/artisan

echo 'Create symlinks'
echo '------------'

# Add global gitignore and setup editor
rm $HOME/.global-gitignore
ln -s $HOME/.dotfiles/shell/.global-gitignore $HOME/.global-gitignore
git config --global core.excludesfile "$HOME/.global-gitignore"
git config --global include.path "$HOME/.dotfiles/config/.gitconfig"

git config --global core.editor "code --wait"

# Symlink zsh prefs
rm $HOME/.zshrc
ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc

# Symlink vim prefs
rm $HOME/.vimrc
ln -s $HOME/.dotfiles/shell/.vimrc $HOME/.vimrc
rm $HOME/.vim
ln -s $HOME/.dotfiles/shell/.vim $HOME/.vim

echo 'Install zsh theme remy'
echo '------------'
ln -s $HOME/.dotfiles/zshrc/remy.zsh-theme $HOME/.oh-my-zsh/custom/themes/remy.zsh-theme

# Activate z
cd ~/.dotfiles/shell
chmod +x z.sh

echo 'Install node version manager (nvm)'
echo '-----------'
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
# nvm install-latest-npm
nvm install 12
nvm use 12

# echo 'Install httpie'
# echo '--------------'
sudo apt-get install httpie -y

echo 'Install ncdu'
echo '------------'
sudo apt-get install ncdu -y

echo 'Install hub'
echo '-----------'
sudo apt-get install hub -y

echo 'Install ack'
echo '-----------'
sudo apt-get install ack-grep -y

echo 'Install tldr'
echo '-----------'
sudo apt-get install tldr -y

echo 'Install nmap'
echo '-----------'
sudo apt-get install nmap -y

echo 'Install Pygments'
echo '-----------'
sudo apt-get -y install python3-pip
pip3 install Pygments

echo 'Install pbcopy'
echo '-----------'
sudo apt-get install xclip -y

echo 'Install git standup'
echo '-----------'
curl -L https://raw.githubusercontent.com/kamranahmedse/git-standup/master/installer.sh | sudo sh

echo 'Install zip'
echo '-----------'
sudo apt-get install zip -y

echo 'Install fzf'
echo '-----------'
linuxDistr=$(awk -F= '/^ID=/{print $2}' /etc/os-release)
if [ "$linuxDistr" == "debian" ] || [ "$linuxDistr" == "rasbian" ]; then
    sudo apt-get install fzf
else
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install
fi

# echo 'Install php'
# echo '-----------'
# brew install php@7.2
# brew install php@7.3
# brew install php@7.4

# echo 'Install imagemagick'
# echo '-------------------'
# brew install imagemagick

# echo 'Install imagick'
# echo '---------------'
# pecl install imagick

# echo 'Install xdebug'
# echo '--------------'
# pecl install xdebug

# echo 'Install redis'
# echo '-------------'
# pecl install redis

# echo 'Install mysql'
# echo '-------------'
# brew install mysql
# brew services start mysql

# echo 'Install redis'
# echo '-------------'
# brew install redis
# brew services start redis

echo 'Install zsh-autosuggestions'
echo '---------------------------'
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

echo 'Install prettyping'
echo '---------------------------'
sudo apt-get install prettyping -y

echo 'Install ffmpeg'
echo '---------------------------'
sudo apt-get install ffmpeg -y

# echo 'Install composer'
# echo '----------------'
# cd ~/.dotfiles
# EXPECTED_SIGNATURE="$(wget -q -O - https://composer.github.io/installer.sig)"
# php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
# ACTUAL_SIGNATURE="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"

# if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
# then
#     echo 'ERROR: Invalid Composer installer signature'
#     rm composer-setup.php
# else
#     php composer-setup.php --quiet
#     rm composer-setup.php
#     echo 'move composer to /usr/local/bin/composer'
#     sudo mv -f composer.phar /usr/local/bin/composer
# fi

# echo 'Install cgr'
# echo '------------'
# composer global require consolidation/cgr

# echo 'Install laravel envoy'
# echo '---------------------'
# cgr "laravel/envoy=~1.0"

# echo 'Install phpunit-watcher'
# echo '-----------------------'
# cgr spatie/phpunit-watcher

# echo 'Install mixed-content-scanner-cli'
# echo '---------------------------------'
# cgr spatie/mixed-content-scanner-cli

# echo 'Install irak/prestissimo'
# echo '---------------------------------'
# composer global require hirak/prestissimo # need to be installed via composer directly

# echo 'Install laravel valet'
# echo '---------------------'
# cgr laravel/valet
# valet install

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
echo 'All done!'
echo 'Things to do to make the agnoster terminal theme work:'
echo '1. Install menlo patched font included in ~/.dotfiles/misc https://gist.github.com/qrush/1595572/raw/Menlo-Powerline.otf'
echo '2. Install patched solarized theme included in ~/.dotfiles/misc'
echo '3. Allow sudo permittance with fingerprint. Futher instructions in ~/.dotfiles/misc/fingerprint.sh'

echo '++++++++++++++++++++++++++++++'